[{"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/index.js":"1","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/reportWebVitals.js":"2","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Login.js":"3","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Dashboard.js":"4","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Constants.js":"5","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Quote.js":"6","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Header.js":"7","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/QuoteList.js":"8","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/QuoteDetail.js":"9","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Routes.js":"10","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Footer.js":"11","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/AdminDashboard.js":"12","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageInventory.js":"13","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditInventory.js":"14","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageOperations.js":"15","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditOperations.js":"16","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Utils.js":"17","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageWorker.js":"18","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditWorker.js":"19","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageProjects.js":"20","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditProject.js":"21","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageCustomer.js":"22","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditCustomer.js":"23","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageInspections.js":"24","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/auth.service.js":"25","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/admin.service.js":"26","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Upload.js":"27","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/user.service.js":"28","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ForgotPassword.js":"29","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditQuote.js":"30","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageQuote.js":"31","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Button.js":"32","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/MyAlert.js":"33","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Popup.js":"34","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Sidebar.js":"35","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerDashboard.js":"36","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerOperations.js":"37","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerProjects.js":"38","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerTimesheet.js":"39","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ToolsList.js":"40","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Checkbox.js":"41"},{"size":413,"mtime":1627535535216,"results":"42","hashOfConfig":"43"},{"size":362,"mtime":1611647184538,"results":"44","hashOfConfig":"43"},{"size":4524,"mtime":1627059088216,"results":"45","hashOfConfig":"43"},{"size":2448,"mtime":1625120010868,"results":"46","hashOfConfig":"43"},{"size":438,"mtime":1627533262683,"results":"47","hashOfConfig":"43"},{"size":6673,"mtime":1625033239795,"results":"48","hashOfConfig":"43"},{"size":641,"mtime":1616042527422,"results":"49","hashOfConfig":"43"},{"size":4233,"mtime":1625032901013,"results":"50","hashOfConfig":"43"},{"size":12195,"mtime":1625941101960,"results":"51","hashOfConfig":"43"},{"size":1216,"mtime":1625797895746,"results":"52","hashOfConfig":"43"},{"size":358,"mtime":1612063115281,"results":"53","hashOfConfig":"43"},{"size":2630,"mtime":1625797756682,"results":"54","hashOfConfig":"43"},{"size":6294,"mtime":1627057429241,"results":"55","hashOfConfig":"43"},{"size":5947,"mtime":1627325576556,"results":"56","hashOfConfig":"43"},{"size":6802,"mtime":1627058947830,"results":"57","hashOfConfig":"43"},{"size":9599,"mtime":1627058764289,"results":"58","hashOfConfig":"43"},{"size":376,"mtime":1617952332571,"results":"59","hashOfConfig":"43"},{"size":7170,"mtime":1627533553820,"results":"60","hashOfConfig":"43"},{"size":7193,"mtime":1627323201440,"results":"61","hashOfConfig":"43"},{"size":6891,"mtime":1627534001697,"results":"62","hashOfConfig":"43"},{"size":4119,"mtime":1627058530675,"results":"63","hashOfConfig":"43"},{"size":4982,"mtime":1618594576248,"results":"64","hashOfConfig":"43"},{"size":4069,"mtime":1627057933127,"results":"65","hashOfConfig":"43"},{"size":3760,"mtime":1618596780441,"results":"66","hashOfConfig":"43"},{"size":1043,"mtime":1624936330800,"results":"67","hashOfConfig":"43"},{"size":4489,"mtime":1627536150441,"results":"68","hashOfConfig":"43"},{"size":1372,"mtime":1623734059427,"results":"69","hashOfConfig":"43"},{"size":568,"mtime":1624941591709,"results":"70","hashOfConfig":"43"},{"size":1582,"mtime":1624509978010,"results":"71","hashOfConfig":"43"},{"size":11779,"mtime":1627057782384,"results":"72","hashOfConfig":"43"},{"size":7484,"mtime":1627534799220,"results":"73","hashOfConfig":"43"},{"size":180,"mtime":1624501976375,"results":"74","hashOfConfig":"43"},{"size":408,"mtime":1624504356111,"results":"75","hashOfConfig":"43"},{"size":1360,"mtime":1626807477154,"results":"76","hashOfConfig":"43"},{"size":3646,"mtime":1626899325820,"results":"77","hashOfConfig":"43"},{"size":1725,"mtime":1626152706157,"results":"78","hashOfConfig":"43"},{"size":6616,"mtime":1626326322191,"results":"79","hashOfConfig":"43"},{"size":6832,"mtime":1626326128154,"results":"80","hashOfConfig":"43"},{"size":562,"mtime":1626152776745,"results":"81","hashOfConfig":"43"},{"size":4464,"mtime":1627059038146,"results":"82","hashOfConfig":"43"},{"size":369,"mtime":1626846725760,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oxb9l2",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/index.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/reportWebVitals.js",[],["175","176"],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Login.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Dashboard.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Constants.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Quote.js",["177","178"],"import React, { useState } from \"react\";\n\n\nvar rowIndex = 0;\nfunction Quote() {\n    const inputList = [{\n        \"name\": \"Item Name\",\n        \"type\": \"text\",\n        \"value\": \"\"\n    }, {\n        \"name\": \"Unit\",\n        \"type\": \"text\",\n        \"value\": \"\"\n    },\n    {\n        \"name\": \"Quantity \",\n        \"type\": \"text\",\n        \"value\": \"\"\n    }\n    ];\n    const newInputList = [{\n        \"name\": \"Item Name\",\n        \"type\": \"text\",\n        \"value\": \"\"\n    }, {\n        \"name\": \"Unit\",\n        \"type\": \"text\",\n        \"value\": \"\"\n    },\n    {\n        \"name\": \"Quantity \",\n        \"type\": \"text\",\n        \"value\": \"\"\n    }\n    ];\n    const [formInputList, setFormInputList] = useState([{\n        \"data0\": inputList\n    }]);\n\n    // handle input change\n    const handleInputChange = (e, index, j) => {\n        const list = [...formInputList];\n        list.map((item) => {\n\n            if (item[index]) {\n                item[index][j].value = e.target.value;\n                setFormInputList(list);                \n            }\n        })\n    };\n\n    const handleFormChange = (event) => {\n        //var name = event.target.name;\n        //var value = event.target.value;\n\n        //this.setState({ name: value })\n        \n    };\n\n    // handle click event of the Remove button\n    const handleRemoveClick = index => {\n        var removeIndex;\n        const removeList = [...formInputList];\n        removeList.map((item, k) => {\n\n            if (item[index]) {\n                removeIndex = k;\n            }\n        })\n        const list = [...formInputList];\n        list.splice(removeIndex, 1);\n        setFormInputList(list);\n    };\n\n    // handle click event of the Add button\n    const handleAddClick = () => {\n        rowIndex = rowIndex + 1;\n        const rowKey = \"data\" + rowIndex;\n        \n        const newFormInputList = {\n            [rowKey]: newInputList\n        }\n        setFormInputList([...formInputList, newFormInputList]);\n    };\n\n    const renderFormRowHeader = () => {\n        if(formInputList[0]) {\n            const headerObj = formInputList[0][Object.keys(formInputList[0])];\n        return (\n            <div className=\"row mt-1\">\n                {headerObj.map((item) => {\n                    return (\n                        <div className=\"col-sm\">\n                            <label>{item.name}</label>\n                        </div>\n                    )\n\n                })}\n            <div className=\"col-sm\">\n                <label></label>\n            </div>\n            </div>\n        )\n        }\n        \n    };\n    const cancelQuote = () => { \n        \n      };\n      const sendQuoteReq = () => {\n        console.log(formInputList);\n        /*\n        var data = {\n            \"title\": \"quote2222234\",\n            \"desc\": \"is simply dummy text of the printing and typesetti\",\n            \"status\" : \"ACCEPTED\",\n            \"measures\": [\n                {\n                    \"name\": \"qq\",\n                    \"unit\": \"1\",\n                    \"qty\": \"12\"\n                }\n            ],\n            \"uploads\": [\n                {\n                    \"fileName\": \"haaaajkdfjkldsajfdsfdslk\",\n                    \"filePath\": \"1234567890qsfdsfdfghdwertg\"\n                }\n            ]\n        };\n\n        UserService.createQuote(data).then(\n            response => {\n                console.log(response);\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        ); */\n      };\n\n    const renderFormRow = (x) => {\n        return Object.keys(x).filter((obj) => Object.keys(x).indexOf(obj) === 0).map(obj => {\n            return (\n\n                <div className=\"row mt-1\" key={obj}>\n\n                    {x[obj].map((dataItem, j) => {\n                        return (\n                            <div className=\"col-sm\">\n                                <input\n                                    className=\"form-control\"\n                                    name={dataItem.name}\n                                    value={dataItem.value}\n                                    onChange={e => handleInputChange(e, obj, j)}\n                                />\n                            </div>\n\n                        )\n                    }\n                    )}\n\n                    <div className=\"col-sm\">\n                        <div className=\"btn-box\">\n                            <button\n                                className=\"btn btn-primary btn-sm pr-4 pl-4\"\n                                onClick={() => handleRemoveClick(obj)}>Remove</button>\n\n                        </div>\n                    </div>\n\n                </div>\n\n            )\n        })\n    };\n\n    return (\n        <div className=\"app flex-row align-items-center\">\n            <div className=\"list-group-header section-header row\">\n                <div className=\"col\">\n                    <span className=\"mb-1 underline\">Send New </span>\n                    <span className=\"mb-1 blue-color pl-2\">Quote Request</span>\n                </div>\n                <div className=\"col text-right\">\n                    <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\" onClick={() => cancelQuote()} >Reset</button>\n                    <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick= {() => sendQuoteReq()}>Send</button>\n                </div>\n            </div>\n            <div className=\"blue-box-div\" id=\"create-quote-form\">\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input type=\"text\" className=\"form-control\" id=\"title\" \n                    name=\"title\"\n                    onChange={e => handleFormChange(e)}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"description\">Description</label>\n                    <textarea className=\"form-control\" id=\"description\" rows=\"3\"></textarea>\n                </div>\n\n\n                <div className=\"form-group\">\n                    <label>Measurements</label>\n                    <button className=\"btn add-btn \" onClick={handleAddClick}></button>\n                    {renderFormRowHeader()}\n                    {formInputList.map((x, i) => {\n                        return (renderFormRow(x, i));\n                    })}\n                </div>\n\n                <div>\n                    <label>Attachments</label>\n                    <label className=\"btn btn-blue btn-sm pr-4 pl-4 ml-2\">\n                        Browse <input type=\"file\" hidden />\n                    </label>\n                </div>\n            </div>\n\n\n\n        </div>\n    );\n}\n\nexport default Quote;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Header.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/QuoteList.js",["179"],"import React, { Component } from 'react';\nimport AdminService from \"../services/admin.service\";\n\nclass QuoteList extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.getAllQuotes();\n    }\n    \n\n    state = {\n        activeId : 0,\n        searchValue: \"\",\n        listitems: []\n\n    }\n\n    selectQuote(item) {\n        this.props.parentCallback(item);\n        this.setState({\n            activeId:item.id\n          });\n    }\n\n    getAllQuotes() {\n        AdminService.getAllQuotes().then(\n            response => {\n                debugger;\n                this.setState({\n                    listitems: response.data.quotes\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n\n\n    handleChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <div className=\"list-group-header section-header row\">\n                    <div className=\"col-4\">\n                        <span className=\"mb-1 underline\">My Quote</span>\n                        <span className=\"mb-1 blue-color pl-2\">Requests</span>\n                    </div>\n                    <div className=\"col-8\">\n                        <div className=\"has-search\">\n                            <span className=\"fa fa-search form-control-feedback\"></span>\n                            <input type=\"text\" className=\"form-control search-box\" onChange={this.handleChange} placeholder=\"Search quotes...\" />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"list-group\">\n\n                    {this.state.listitems.filter(item =>\n                        item.title.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n                            <a className={\n                                (listitem.id === this.state.activeId ? \" active list-group-item list-group-item-action\" : \"list-group-item list-group-item-action\")\n                              }\n                            aria-current=\"true\" key={listitem.id} id={listitem.id} onClick={() => this.selectQuote(listitem)} >\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                    <h5 className=\"mb-1 underline half\">{listitem.title}</h5>\n\n                                </div>\n                                <p className=\"mb-1 ellipses_two\">{listitem.desc}</p>\n                                <div>\n                                    {listitem.tools && listitem.tools.map(tool => (\n                                        <span className=\"badge tool-badge\">{tool}</span>\n                                    )\n                                    )}\n                                </div>\n                                <div className=\"row list-item-detail\">\n                                    <div className=\"col-2 calender-icon\">\n                                        <small>{(new Date(listitem.createdAt)).toLocaleDateString()}</small>\n                                    </div>\n                                    <div className=\"col-5 flag-icon\">\n                                        <small>{listitem.status}</small>\n                                        <span className=\"date-badge badge\">{(new Date(listitem.updatedAt)).toLocaleDateString()}</span>\n                                    </div>\n\n                                    <div className=\"col-3 attachment-icon\">\n                                        <small>{listitem.attachments && listitem.attachments.length}</small>\n                                        <small>Attachments</small>\n                                    </div>\n                                    <div className=\"col-2 rightarrow-icon\">\n                                        <small>View details</small>\n                                    </div>\n                                </div>\n                            </a>\n\n                        ))}\n\n                </div>\n\n            </React.Fragment>\n        );\n    }\n}\nexport default QuoteList;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/QuoteDetail.js",["180","181"],"import React, { Component } from 'react';\n\nclass QuoteDetail extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            formInputList: this.props.dataFromParent.Measures,\n            selectedItem: this.props.dataFromParent\n        };\n    }\n\n\n\n    newQuote() {\n        this.props.parentCallback();\n    }\n    editQuote() {\n        this.props.parentEditCallBack();\n    }\n    saveQuote() {\n\n    }\n\n\n\n\n\n    handleAddClick() {\n        alert(\"Clicked\");\n        debugger;\n        var newKey = 0;\n        var formInputList = this.state.formInputList, tmpObj = {};\n\n        Object.keys(formInputList[0]).map(function(x,i){\n            tmpObj[x] = '';\n        });\n\n        const list = [...this.state.formInputList];\n        list.push(tmpObj);\n        this.props.dataFromParent.Measures = list;\n        this.setState({\n            formInputList: this.props.dataFromParent.Measures\n        });\n        debugger;\n\n        /*var rowKey = \"data\" + newKey;\n        var newInputList = [{\n            \"name\": \"Item Name\",\n            \"type\": \"text\",\n            \"value\": \"\"\n        }, {\n            \"name\": \"Unit\",\n            \"type\": \"text\",\n            \"value\": \"\"\n        },\n        {\n            \"name\": \"Quantity \",\n            \"type\": \"text\",\n            \"value\": \"\"\n        }\n        ];\n\n        var newFormInputObj = {\n            [rowKey]: newInputList\n        }\n\n        const list = [...this.state.formInputList];\n        list.push(newFormInputObj);\n        this.setState({\n            formInputList: list\n        });*/\n    }\n    handleInputChange = (e) => {\n\n    }\n    handleRemoveClick = (index) => {\n\n        /*var removeIndex;\n        const removeList = [...this.state.formInputList];\n        removeList.map((item, k) => {\n\n            if (item[index]) {\n                removeIndex = k;\n            }\n        })\n        const list = [...this.state.formInputList];\n        list.splice(removeIndex, 1);\n        //setFormInputList(list);\n        this.setState({\n            formInputList: list\n        });*/\n\n    }\n    \n    renderFormRow = (item, i) => {\n        debugger;\n        console.log(this.state.formInputList);\n        const headerObj = Object.keys(this.props.dataFromParent.Measures[0]);\n        if (item) {\n            return (\n                <div className=\"row mt-1\">\n                    {headerObj && headerObj.map((headerKey) => {\n                        return (\n                            <div className=\"col-sm\">\n\n                                <input\n                                    className=\"form-control\"\n                                    defaultValue={item[headerKey]}\n                                    onChange={e => this.handleInputChange(e)}\n                                />\n\n                            </div>\n                        )\n                    })}\n                    <div className=\"col-sm\">\n                        <div className=\"btn-box\">\n                            <button\n                                className=\"btn btn-primary btn-sm pr-4 pl-4\"\n                                onClick={() => this.handleRemoveClick()}>Remove</button>\n\n                        </div>\n                    </div>\n\n                </div>\n                )\n        }\n\n\n        /*\n        return Object.keys(x).filter((obj) => Object.keys(x).indexOf(obj) === 0).map(obj => {\n            return (\n\n                <div className=\"row mt-1\" key={obj}>\n\n                    {x[obj].map((dataItem, j) => {\n                        return (\n                            <div className=\"col-sm\">\n                                <input\n                                    className=\"form-control\"\n                                    name={dataItem.name}\n                                    defaultValue={dataItem.value}\n                                    onChange={e => this.handleInputChange(e, obj, j)}\n                                />\n                            </div>\n\n                        )\n                    }\n                    )}\n\n                    <div className=\"col-sm\">\n                        <div className=\"btn-box\">\n                            <button\n                                className=\"btn btn-primary btn-sm pr-4 pl-4\"\n                                onClick={() => this.handleRemoveClick(obj)}>Remove</button>\n\n                        </div>\n                    </div>\n\n                </div>\n\n            )\n        })\n*/\n\n    }\n\n    renderEditQuote() {\n\n        /*\n         <div className=\"form-group\">\n                        <label>Measurements</label>\n                        <button className=\"btn add-btn \" onClick={() => this.handleAddClick()}></button>\n\n\n                        {this.renderFormRowHeader()}\n                        {this.state.formInputList && this.state.formInputList.map((x, i) => {\n                            return (this.renderFormRow(x, i));\n                        })}\n\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Attachments</label>\n                        <label className=\"btn btn-blue btn-sm pr-4 pl-4 ml-2\">\n                            Browse <input type=\"file\" hidden />\n                        </label>\n\n                        <div className=\"col-3 attachment-icon\">\n                            <small>{selectedQuote.Uploads.length}</small>\n                            <small>Attachments</small>\n                        </div>\n\n                    </div>\n                     */\n        var selectedQuote = this.props.dataFromParent;\n        \n        if (selectedQuote) {\n\n            return (\n                <div className=\"blue-box-div\">\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" className=\"form-control\" id=\"title\" defaultValue={selectedQuote.title} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"description\">Description</label>\n                        <textarea defaultValue={selectedQuote.desc} className=\"form-control\" id=\"description\" rows=\"3\"></textarea>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Measurements</label>\n                        <button className=\"btn add-btn \" onClick={() => this.handleAddClick()}></button>\n\n\n                        {this.renderMeasurementHeader()}\n                        {this.props.dataFromParent.Measures && this.props.dataFromParent.Measures.map((x, i) => {\n                        return (this.renderFormRow(x, i));\n                        })}\n\n                        \n\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Attachments</label>\n                        <label className=\"btn btn-blue btn-sm pr-4 pl-4 ml-2\">\n                            Browse <input type=\"file\" hidden />\n                        </label>\n\n                        <div className=\"col-3 attachment-icon\">\n                            <small>{selectedQuote.Uploads.length}</small>\n                            <small>Attachments</small>\n                        </div>\n\n                    </div>\n\n\n\n\n                </div>\n            )\n        }\n    }\n\n\n\n\n\n    renderMeasurementHeader() {\n\n        var formInputList = this.props.dataFromParent.Measures;\n        if (formInputList) {\n            if (formInputList[0]) {\n                const headerObj = Object.keys(formInputList[0]);\n                return (\n                    <div className=\"row mt-1\">\n                        {headerObj && headerObj.map((item) => {\n                            return (\n                                <div className=\"col-sm\">\n                                    <span className=\"font-weight-bold\">{item}</span>\n                                </div>\n                            )\n                        })}\n                    </div>\n                )\n            }\n        }\n    }\n\n    renderMeasurements(item, i) {\n\n        const headerObj = Object.keys(this.props.dataFromParent.Measures[0]);\n        if (item) {\n            return (\n                <div className=\"row mt-1\">\n                    {headerObj && headerObj.map((headerKey) => {\n                        return (\n                            <div className=\"col-sm\">\n                                <span >{item[headerKey]}</span>\n                            </div>\n                        )\n                    })}\n                </div>\n            )\n        }\n\n    }\n\n    renderQuoteDetails() {\n\n        if (this.props.dataFromParent) {\n            return (\n                <div className=\"blue-box-div\">\n                    <div>\n                        <span className=\"underline blue\">Title</span>\n                        <p>{this.props.dataFromParent.title}</p>\n                    </div>\n                    <div>\n                        <span className=\"underline blue\">Description</span>\n                        <p>{this.props.dataFromParent.desc}</p>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-4\">\n                            <span className=\"underline blue\">Submitted On</span>\n                            <p>{(new Date(this.props.dataFromParent.createdAt)).toLocaleDateString()}</p>\n                        </div>\n                        <div className=\"col-sm\">\n                            <span className=\"underline blue\">Status</span>\n                            <p> {this.props.dataFromParent.status}\n                                <button type=\"button\" className=\"btn btn-blue btn-sm pr-2 pl-2 mr-2 ml-2\" >View</button>\n                                <button type=\"button\" className=\"btn btn-green btn-sm pr-2 pl-2\" >Submit PO</button>\n                            </p>\n                        </div>\n\n                    </div>\n                    <div>\n                        <span className=\"underline blue\" >Measurements</span>\n                    </div>\n\n                    {this.renderMeasurementHeader()}\n                    {this.props.dataFromParent.Measures && this.props.dataFromParent.Measures.map((x, i) => {\n                        return (this.renderMeasurements(x, i));\n                    })}\n\n                    <div>\n                        <span className=\"underline blue\" >Attachments</span>\n\n                        <div className=\"row mt-1\">\n                            {this.props.dataFromParent.Uploads && this.props.dataFromParent.Uploads.map((item) => {\n                                return (\n                                    <div className=\"col-sm\">\n                                        <span >{item['fileName']}</span>\n                                    </div>\n                                )\n                            })}\n                        </div>\n\n                    </div>\n                </div>\n            )\n        }\n    }\n    render() {\n        return (\n            <div className=\"app flex-row align-items-center\" >\n\n                <div className=\"list-group-header section-header row\">\n                    <div className=\"col\">\n                        <span className=\"mb-1 underline\">Quote </span>\n                        <span className=\"mb-1 blue-color pl-2\"> Detail</span>\n                    </div>\n                    <div className=\"col text-right\">\n                        <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\" onClick={() => this.newQuote()}>New</button>\n\n\n                        {this.props.isQuoteEditActive\n                            ? <button type=\"button\" className=\"btn btn-green btn-sm pr-4 pl-4 ml-2\" onClick={() => this.saveQuote()}>Save</button>\n                            : <button type=\"button\" className=\"btn btn-green btn-sm pr-4 pl-4 ml-2\" onClick={() => this.editQuote()}>Edit</button>\n                        }\n\n                    </div>\n                </div>\n\n                {this.props.isQuoteEditActive\n                    ? this.renderEditQuote()\n                    : this.renderQuoteDetails()\n                }\n\n            </div>\n\n        );\n    }\n}\nexport default QuoteDetail;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Routes.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Footer.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/AdminDashboard.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageInventory.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditInventory.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageOperations.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditOperations.js",["182"],"import React, { Component } from 'react';\nimport ToolsJson from '../../data/inventoryData.json';\nimport WorkerJson from '../../data/workerData.json';\n\n\nclass EditOperations extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            item: this.props.selectedItem,\n            toolsList: ToolsJson.inventoryList,\n            selectedTools: [],\n            selectedTool: {},\n            Required: 0,\n\n            workerList: WorkerJson.rows\n        }\n        this.Required = this.Required.bind(this);\n    }\n    \n    Required(event) {\n        this.setState({ Required: event.target.value })\n    }\n    handleChange(propertyName, event) {\n        var item = this.state.item;\n        item[propertyName] = event.target.value;\n        this.setState({ item: item });\n    }\n    handleInputChange(event) {\n        this.setState({ selectedTool: this.state.toolsList[event.target.value] });\n    }\n\n    addTools(event) {\n        this.state.selectedTool['required'] = this.state.Required;\n        var newListTools = this.state.selectedTools;\n        newListTools.push(this.state.selectedTool);\n        this.setState({ selectedTools: newListTools });\n    }\n    saveOperation() {\n        /*console.log(this.state.item);\n        if(this.state.item.id != undefined) {\n            alert(\"editted Successfuly\");\n        } else {\n            alert(\"New item added\");\n        }*/\n        this.props.parentCallback();\n    }\n    resetReq() {\n\n    }\n    handleBreadCrumb() {\n        this.props.parentCallback();\n    }\n\n\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <div className=\"col edit-inventory\">\n                    <div className=\"list-group-header section-header row\">\n                        <div className=\"col-4\">\n\n                            <nav aria-label=\"breadcrumb\">\n                                <ul class=\"breadcrumb\">\n                                    <li class=\"breadcrumb-item\" onClick={this.handleBreadCrumb.bind(this)}>\n                                        <span className=\"mb-1 underline\">Manage</span>\n                                        <span className=\"mb-1 blue-color pl-2\">Operation</span>\n                                    </li>\n                                    <li class=\"breadcrumb-item active\" aria-current=\"page\">\n                                        <span className=\"mb-1\">{(this.state.item.length !== 0) ? 'Edit' : 'Add'}</span>\n                                        <span className=\"mb-1 blue-color pl-2\">Operation</span>\n                                    </li>\n                                </ul>\n                            </nav>\n\n                        </div>\n                        <div className=\"col-8 text-right\">\n                            <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\" onClick={() => this.resetReq()} >Reset</button>\n                            <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick={() => this.saveOperation()}>Save</button>\n                        </div>\n                    </div>\n\n                    <div className=\"blue-box-div row\">\n                        <div className=\"col white-border-right\">\n                            <div>\n                                <span>Operation Name</span>\n                                <input type=\"text\"\n                                    className=\"form-control\" defaultValue={this.state.item.o_name}\n                                    onChange={this.handleChange.bind(this, 'o_name')} />\n                            </div>\n                            <div>\n                                <span>Description</span>\n                                <textarea className=\"form-control\" rows=\"3\"\n                                    defaultValue={this.state.item.o_desc}\n                                    onChange={this.handleChange.bind(this, 'o_desc')}></textarea>\n                            </div>\n\n                            <div>\n                            <div className=\"row\">\n                            <div className=\"col\"><span>Tools and Materials</span></div>\n                            <div className=\"col\"><span>Required</span></div>\n                            </div>\n                                \n                                <div className=\"row\">\n                                    <div className=\"col\">\n                                        <select className=\"form-control\" name=\"city\" onChange={this.handleInputChange.bind(this)}>\n                                            <option selected>Select Tools</option>\n                                            {this.state.toolsList.map((toolItem,index) => (\n                                                <option key={toolItem.id} value={index}>{toolItem.item_name}</option>\n                                            ))}\n                                        </select>\n                                    </div>\n                                    <div className=\"col\">\n                                        <input type=\"text\" className=\"form-control col-2 d-inline\" onChange={this.Required}/>\n                                        \n                                        <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4 d-inline\" onClick={this.addTools.bind(this)}>Add</button>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <div className=\"row mt-1 quote-req-header\">\n                                <div className=\"col-sm\">\n                                    <label>Tool/Material Name</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>Required</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>Availability</label>\n                                </div>\n                            </div>\n                            {this.state.selectedTools && this.state.selectedTools.map(listitem => (\n\n                                <div className=\"row mt-1\" key={listitem.id}>\n                                    <div className=\"col-sm\" >\n                                        <label className=\"description-truncate text-truncate\">{listitem.item_name}</label>\n                                    </div>\n                                    <div className=\"col-sm\" >\n                                        <label>{listitem.required}</label>\n                                    </div>\n                                    <div className=\"col-sm\" >\n                                        <label>{listitem.availability}</label>\n                                    </div>\n                                </div>\n                            ))}\n\n                        </div>\n\n\n\n\n\n\n\n                        <div className=\"col\">\n                            <div>\n                                <span>Workers</span>\n                                <input type=\"text\"\n                                    className=\"form-control\" defaultValue={this.state.item.worker}\n                                    onChange={this.handleChange.bind(this, 'worker')} />\n                            </div>\n\n\n                            <div className=\"row mt-1 quote-req-header\">\n                                <div className=\"col-sm\">\n                                    <label>Worker Profession</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>Required</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>Available</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>Hours</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>Cost</label>\n                                </div>\n                            </div>\n\n                            {this.state.workerList && this.state.workerList.map(listitem => (\n\n                                <div className=\"row mt-1\" key={listitem.id}>\n                                    <div className=\"col-sm\" >\n                                        <label className=\"description-truncate text-truncate\">{listitem.w_name}</label>\n                                    </div>\n                                    <div className=\"col-sm\" >\n                                        <label>{listitem.required}</label>\n                                    </div>\n                                    <div className=\"col-sm\" >\n                                        <label>{listitem.availability}</label>\n                                    </div>\n                                    <div className=\"col-sm\" >\n                                        <label>{listitem.availbilty_per_day}</label>\n                                    </div>\n                                    <div className=\"col-sm\" >\n                                        <label>{listitem.cost_per_day}</label>\n                                    </div>\n                                </div>\n                                ))}\n\n\n                        </div>\n\n                    </div>\n\n\n\n                </div>\n\n\n            </React.Fragment>\n        );\n    }\n}\nexport default EditOperations;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Utils.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageWorker.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditWorker.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageProjects.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditProject.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageCustomer.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditCustomer.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageInspections.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/auth.service.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/admin.service.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Upload.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/user.service.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ForgotPassword.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditQuote.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageQuote.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Button.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/MyAlert.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Popup.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Sidebar.js",["183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200"],"import React, { Component } from 'react';\n\nimport {usersTag} from '../common/Constants';\n\nclass Sidebar extends Component {\n\n    render() {\n        var currentUserId = JSON.parse(localStorage.getItem('user')).userId;\n        \n        return (\n            <React.Fragment>\n                {currentUserId !== usersTag.WORKER_TAG ? \n                ( <div className=\"sidebar-div\">\n                    <ul className=\"nav flex-column\">\n                        <li className=\"nav-item nav-quote-req\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Quote Requests\">\n                            <a className=\"nav-link active\" data-toggle=\"tab\" onClick={ (e) => this.props.onClick(e) } data-id=\"1\"></a>\n                        </li>\n                        <li className=\"nav-item nav-workers\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Workers\">\n                            <a className=\"nav-link\" data-toggle=\"tab\" onClick={ (e) => this.props.onClick(e) } data-id=\"2\"></a>\n                        </li>\n                        <li className=\"nav-item nav-mail\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Customers\">\n                            <a className=\"nav-link\" data-toggle=\"tab\" onClick={ (e) => this.props.onClick(e) } data-id=\"3\"></a>\n                        </li>\n                        <li className=\"nav-item nav-inventory\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Inventory\">\n                            <a className=\"nav-link\" data-toggle=\"tab\" onClick={ (e) => this.props.onClick(e) } data-id=\"5\"></a>\n                        </li>\n                        <li className=\"nav-item nav-operations\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Operations\">\n                            <a className=\"nav-link\" href=\"#operations-page\" data-toggle=\"tab\" onClick={ (e) => this.props.onClick(e) } data-id=\"6\"></a>\n                        </li>\n                        <li className=\"nav-item nav-projects\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Projects\">\n                            <a className=\"nav-link\" data-toggle=\"tab\" onClick={ (e) => this.props.onClick(e) } data-id=\"7\"></a>\n                        </li>\n                        <li className=\"nav-item nav-test\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Inspections\">\n                            <a className=\"nav-link\" data-toggle=\"tab\" onClick={ (e) => this.props.onClick(e) } data-id=\"4\"></a>\n                        </li>    \n                    </ul>\n                </div> )\n                : \n                ( <div className=\"sidebar-div\">\n                    <ul className=\"nav flex-column\">\n                        <li className=\"nav-item nav-operations\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Operations\">\n                            <a className=\"nav-link\" href=\"#operations-page\" data-toggle=\"tab\" onClick={ (e) => this.props.onClick(e) } data-id=\"1\"></a>\n                        </li>\n                        <li className=\"nav-item nav-projects\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Projects\">\n                            <a className=\"nav-link\" data-toggle=\"tab\" onClick={ (e) => this.props.onClick(e) } data-id=\"2\"></a>\n                        </li>\n                        <li className=\"nav-item nav-test\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Inspections\">\n                            <a className=\"nav-link\" data-toggle=\"tab\" onClick={ (e) => this.props.onClick(e) } data-id=\"3\"></a>\n                        </li>    \n                    </ul>\n                </div> )\n                }\n            </React.Fragment>\n        );\n    }\n}\nexport default Sidebar;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerDashboard.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerOperations.js",["201"],"import React, { Component } from 'react';\n\nimport jsonData from \"../../data/operationsData.json\";\nimport AdminService from \"../services/admin.service\";\n\nclass WorkerOperations extends Component {\n    state = {\n        searchValue: \"\",\n        listitems: jsonData.operationsList,\n        selectedItem: [],\n        editOperationPage: false\n    }\n    constructor(props) {\n        super(props);\n        //this.getAllOperationList();\n    }\n    getAllOperationList() {\n        AdminService.getAllOperations().then(\n            response => {\n                this.setState({\n                    listitems: response.data.operations\n                });\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n    }\n    handleSearchChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n    editOperations() {\n        this.setState({\n            editOperationPage: true\n        });\n    }\n    deleteOperations() {\n        var tempList = this.state.listitems.filter(item => item.id !== this.state.selectedItem.id);\n        this.setState({\n            listitems: tempList\n        });\n    }\n    addOperations() {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editOperationPage: true\n        });\n    }\n    onOperationSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    parentCallback = () => {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editOperationPage:false\n          });\n    }\n    renderOperationsList() {\n        return(\n            <div className=\"col admin-list-page\" id=\"operations-page\">\n                    <div className=\"list-group-header section-header row\">\n\n                        <div className=\"col-4\">\n                            <span className=\"mb-1 underline\">Manage</span>\n                            <span className=\"mb-1 blue-color pl-2\">Operations</span>\n                        </div>\n\n                        <div className=\"col-8 text-right\">\n                            <div className=\"has-search\">\n                                <span className=\"fa fa-search form-control-feedback\"></span>\n                                <input type=\"text\" className=\"form-control search-box\" placeholder=\"Search quote requests...\" onChange={this.handleSearchChange.bind(this)} />\n                            </div>\n                            <button className=\"btn delete-btn\" onClick={() => this.deleteOperations()}></button>\n                            <button className=\"btn edit-btn\" onClick={() => this.editOperations()}></button>\n                            <button className=\"btn add-btn\" onClick={() => this.addOperations()}></button>\n                        </div>\n                    </div>\n                    <div className=\"quote-req-list\">\n                        <div className=\"row mt-1 quote-req-header\">\n                            <div className=\"col-sm\">\n                                <label>Operation Name</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Description</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Start Date</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>End Date</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Hours Commited</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Hours Left</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Status</label>\n                            </div>\n                        </div>\n                        <div className=\"quote-req-table\">\n\n                           {this.state.listitems.filter(item =>\n                                item.o_name.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n                                    <div className=\"row mt-1\" key={listitem.id}>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                                <input type=\"radio\" className=\"toggle\"\n                                                    name=\"operationItem\" value={listitem.id}\n                                                    onChange={() => this.onOperationSelected(listitem)} />\n                                                {listitem.o_name}\n                                            </label>\n                                            \n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"description-truncate text-truncate\">{listitem.o_desc}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.createdAt}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.updatedAt}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.hoursCommited}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.hoursLeft}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.status}</label>\n                                        </div>\n                                    </div>\n                                ))}\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderOperationsList()}\n            </React.Fragment>\n        );\n    }\n}\nexport default WorkerOperations;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerProjects.js",["202"],"import React, { Component } from 'react';\nimport {statusColorClass} from '../common/Utils.js';\n\nimport AdminService from \"../services/admin.service\";\n\nimport jsonData from \"../../data/projectData.json\";\n\nclass WorkerProjects extends Component {\n    state = {\n        searchValue: \"\",\n        listitems: jsonData.projects,\n        selectedItem: [],\n        editProjectPage: false\n    }\n    constructor(props) {\n        super(props);\n        //this.getAllProjectList();\n    }\n    getAllProjectList() {\n        AdminService.getAllProjects().then(\n            response => {\n                this.setState({\n                    listitems: response.data.projects\n                });\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n          \n    }\n    handleSearchChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n    editProjects() {\n        this.setState({\n            editProjectPage: true\n        });\n    }\n    deleteProjects() {\n        var tempList = this.state.listitems.filter(item => item.id !== this.state.selectedItem.id);\n        this.setState({\n            listitems: tempList\n        });\n    }\n    addProjects() {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editProjectPage: true\n        });\n    }\n    onProjectSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    parentCallback = () => {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editProjectPage:false\n          });\n    }\n    renderProjectList() {\n        return(\n            <div className=\"col admin-list-page\" id=\"projects-page\">\n                    <div className=\"list-group-header section-header row\">\n\n                        <div className=\"col-4\">\n                            <span className=\"mb-1 underline\">Manage</span>\n                            <span className=\"mb-1 blue-color pl-2\">Projects</span>\n                        </div>\n\n                        <div className=\"col-8 text-right\">\n                            <div className=\"has-search\">\n                                <span className=\"fa fa-search form-control-feedback\"></span>\n                                <input type=\"text\" className=\"form-control search-box\" placeholder=\"Search projects...\" onChange={this.handleSearchChange.bind(this)} />\n                            </div>\n                            <button className=\"btn delete-btn\" onClick={() => this.deleteProjects()}></button>\n                            <button className=\"btn edit-btn\" onClick={() => this.editProjects()}></button>\n                            <button className=\"btn add-btn\" onClick={() => this.addProjects()}></button>\n                        </div>\n                    </div>\n                    <div className=\"quote-req-list\">\n                        <div className=\"row mt-1 quote-req-header\">\n                            <div className=\"col-sm\">\n                                <label>Project Name</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Description</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Hours Commited</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Hours Left</label>\n                            </div>\n\n                            <div className=\"col-sm\">\n                                <label>Start Date</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>End Date</label>\n                            </div>\n                            \n                            \n                            <div className=\"col-sm\">\n                                <label>Status</label>\n                            </div>\n                        </div>\n                        <div className=\"quote-req-table\">\n                        \n                            {this.state.listitems.filter(item =>\n                                item.p_name.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n                                    <div className=\"row mt-1\" key={listitem.id}>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                                <input type=\"radio\" className=\"toggle\"\n                                                    name=\"projectItem\" value={listitem.id}\n                                                    onChange={() => this.onProjectSelected(listitem)} />\n                                                {listitem.p_name}\n                                            </label>\n                                            \n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"description-truncate text-truncate\">{listitem.p_desc}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.hours_commited}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.hours_left}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{(new Date(listitem.start_date)).toLocaleDateString()}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{(new Date(listitem.end_date)).toLocaleDateString()}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className = {\"badge \" + statusColorClass(listitem.p_status)} >{listitem.p_status}</label>\n                                        </div>\n                                    </div>\n                                ))}\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderProjectList()}\n            </React.Fragment>\n        );\n    }\n}\nexport default WorkerProjects;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerTimesheet.js",["203"],"\nimport React, { Component } from 'react';\n\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject } from '@syncfusion/ej2-react-schedule';\n\nclass WorkerSchedule extends Component {\n    state = {\n       \n    }\n    constructor(props) {\n        super(props);\n        \n    }\n    render() {\n        return (\n            <div className=\"col admin-list-page\" id=\"operations-page\">\n            <ScheduleComponent>\n    <Inject services={[Day, Week, WorkWeek, Month, Agenda]}/>\n</ScheduleComponent>\n</div>\n        );\n    }\n}\nexport default WorkerSchedule;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ToolsList.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Checkbox.js",[],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":43,"column":25,"nodeType":"210","messageId":"211","endLine":43,"endColumn":27},{"ruleId":"208","severity":1,"message":"209","line":64,"column":34,"nodeType":"210","messageId":"211","endLine":64,"endColumn":36},{"ruleId":"212","severity":1,"message":"213","line":69,"column":29,"nodeType":"214","endLine":72,"endColumn":128},{"ruleId":"215","severity":1,"message":"216","line":32,"column":13,"nodeType":"217","messageId":"218","endLine":32,"endColumn":19},{"ruleId":"208","severity":1,"message":"219","line":35,"column":43,"nodeType":"220","messageId":"211","endLine":35,"endColumn":51},{"ruleId":"221","severity":1,"message":"222","line":34,"column":9,"nodeType":"223","endLine":34,"endColumn":32},{"ruleId":"224","severity":1,"message":"225","line":16,"column":29,"nodeType":"214","endLine":16,"endColumn":131},{"ruleId":"212","severity":1,"message":"213","line":16,"column":29,"nodeType":"214","endLine":16,"endColumn":131},{"ruleId":"224","severity":1,"message":"225","line":19,"column":29,"nodeType":"214","endLine":19,"endColumn":124},{"ruleId":"212","severity":1,"message":"213","line":19,"column":29,"nodeType":"214","endLine":19,"endColumn":124},{"ruleId":"224","severity":1,"message":"225","line":22,"column":29,"nodeType":"214","endLine":22,"endColumn":124},{"ruleId":"212","severity":1,"message":"213","line":22,"column":29,"nodeType":"214","endLine":22,"endColumn":124},{"ruleId":"224","severity":1,"message":"225","line":25,"column":29,"nodeType":"214","endLine":25,"endColumn":124},{"ruleId":"212","severity":1,"message":"213","line":25,"column":29,"nodeType":"214","endLine":25,"endColumn":124},{"ruleId":"224","severity":1,"message":"225","line":28,"column":29,"nodeType":"214","endLine":28,"endColumn":148},{"ruleId":"224","severity":1,"message":"225","line":31,"column":29,"nodeType":"214","endLine":31,"endColumn":124},{"ruleId":"212","severity":1,"message":"213","line":31,"column":29,"nodeType":"214","endLine":31,"endColumn":124},{"ruleId":"224","severity":1,"message":"225","line":34,"column":29,"nodeType":"214","endLine":34,"endColumn":124},{"ruleId":"212","severity":1,"message":"213","line":34,"column":29,"nodeType":"214","endLine":34,"endColumn":124},{"ruleId":"224","severity":1,"message":"225","line":42,"column":29,"nodeType":"214","endLine":42,"endColumn":148},{"ruleId":"224","severity":1,"message":"225","line":45,"column":29,"nodeType":"214","endLine":45,"endColumn":124},{"ruleId":"212","severity":1,"message":"213","line":45,"column":29,"nodeType":"214","endLine":45,"endColumn":124},{"ruleId":"224","severity":1,"message":"225","line":48,"column":29,"nodeType":"214","endLine":48,"endColumn":124},{"ruleId":"212","severity":1,"message":"213","line":48,"column":29,"nodeType":"214","endLine":48,"endColumn":124},{"ruleId":"226","severity":1,"message":"227","line":13,"column":5,"nodeType":"228","messageId":"229","endLine":16,"endColumn":6},{"ruleId":"226","severity":1,"message":"227","line":15,"column":5,"nodeType":"228","messageId":"229","endLine":18,"endColumn":6},{"ruleId":"226","severity":1,"message":"227","line":10,"column":5,"nodeType":"228","messageId":"229","endLine":13,"endColumn":6},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'newKey' is assigned a value but never used.","Identifier","unusedVar","Array.prototype.map() expects a return value from function.","FunctionExpression","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]