[{"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/index.js":"1","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/reportWebVitals.js":"2","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Login.js":"3","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Dashboard.js":"4","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Constants.js":"5","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Quote.js":"6","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Header.js":"7","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/QuoteList.js":"8","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/QuoteDetail.js":"9","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Routes.js":"10","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Footer.js":"11","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/AdminDashboard.js":"12","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageInventory.js":"13","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditInventory.js":"14","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageOperations.js":"15","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditOperations.js":"16","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Utils.js":"17","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageWorker.js":"18","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditWorker.js":"19","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageProjects.js":"20","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditProject.js":"21","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageCustomer.js":"22","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditCustomer.js":"23","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageInspections.js":"24","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/auth.service.js":"25","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/admin.service.js":"26","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Upload.js":"27","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/user.service.js":"28","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ForgotPassword.js":"29","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditQuote.js":"30","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageQuote.js":"31","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Button.js":"32","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/MyAlert.js":"33","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Popup.js":"34","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Sidebar.js":"35","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerDashboard.js":"36","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerOperations.js":"37","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerProjects.js":"38","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerTimesheet.js":"39","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ToolsList.js":"40","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Checkbox.js":"41","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/OperationList.js":"42","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ConfigureOperation.js":"43","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/TableRow.js":"44","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/TableHeader.js":"45"},{"size":413,"mtime":1627535535216,"results":"46","hashOfConfig":"47"},{"size":362,"mtime":1611647184538,"results":"48","hashOfConfig":"47"},{"size":4524,"mtime":1627059088216,"results":"49","hashOfConfig":"47"},{"size":2983,"mtime":1629427790748,"results":"50","hashOfConfig":"47"},{"size":437,"mtime":1628879156915,"results":"51","hashOfConfig":"47"},{"size":8818,"mtime":1628912824158,"results":"52","hashOfConfig":"47"},{"size":1211,"mtime":1629427353934,"results":"53","hashOfConfig":"47"},{"size":4226,"mtime":1628879546709,"results":"54","hashOfConfig":"47"},{"size":15402,"mtime":1629783272713,"results":"55","hashOfConfig":"47"},{"size":1216,"mtime":1625797895746,"results":"56","hashOfConfig":"47"},{"size":358,"mtime":1612063115281,"results":"57","hashOfConfig":"47"},{"size":2630,"mtime":1625797756682,"results":"58","hashOfConfig":"47"},{"size":8386,"mtime":1628834469108,"results":"59","hashOfConfig":"47"},{"size":6200,"mtime":1627594893878,"results":"60","hashOfConfig":"47"},{"size":8605,"mtime":1628834950115,"results":"61","hashOfConfig":"47"},{"size":11358,"mtime":1628835137516,"results":"62","hashOfConfig":"47"},{"size":376,"mtime":1617952332571,"results":"63","hashOfConfig":"47"},{"size":7884,"mtime":1628835521315,"results":"64","hashOfConfig":"47"},{"size":7169,"mtime":1627574764991,"results":"65","hashOfConfig":"47"},{"size":8949,"mtime":1628835576937,"results":"66","hashOfConfig":"47"},{"size":4111,"mtime":1628790546995,"results":"67","hashOfConfig":"47"},{"size":7299,"mtime":1628831763270,"results":"68","hashOfConfig":"47"},{"size":4842,"mtime":1628833960017,"results":"69","hashOfConfig":"47"},{"size":10062,"mtime":1629842113369,"results":"70","hashOfConfig":"47"},{"size":1042,"mtime":1628985829821,"results":"71","hashOfConfig":"47"},{"size":6776,"mtime":1629781787611,"results":"72","hashOfConfig":"47"},{"size":1372,"mtime":1623734059427,"results":"73","hashOfConfig":"47"},{"size":1253,"mtime":1629421209639,"results":"74","hashOfConfig":"47"},{"size":1582,"mtime":1624509978010,"results":"75","hashOfConfig":"47"},{"size":15660,"mtime":1629785529495,"results":"76","hashOfConfig":"47"},{"size":7484,"mtime":1627534799220,"results":"77","hashOfConfig":"47"},{"size":180,"mtime":1624501976375,"results":"78","hashOfConfig":"47"},{"size":408,"mtime":1624504356111,"results":"79","hashOfConfig":"47"},{"size":1924,"mtime":1628627911760,"results":"80","hashOfConfig":"47"},{"size":3646,"mtime":1626899325820,"results":"81","hashOfConfig":"47"},{"size":1725,"mtime":1626152706157,"results":"82","hashOfConfig":"47"},{"size":6616,"mtime":1626326322191,"results":"83","hashOfConfig":"47"},{"size":6832,"mtime":1626326128154,"results":"84","hashOfConfig":"47"},{"size":562,"mtime":1626152776745,"results":"85","hashOfConfig":"47"},{"size":4472,"mtime":1627573905514,"results":"86","hashOfConfig":"47"},{"size":369,"mtime":1626846725760,"results":"87","hashOfConfig":"47"},{"size":3091,"mtime":1627619563041,"results":"88","hashOfConfig":"47"},{"size":8676,"mtime":1629743472912,"results":"89","hashOfConfig":"47"},{"size":1456,"mtime":1629742167491,"results":"90","hashOfConfig":"47"},{"size":513,"mtime":1628657983080,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"oxb9l2",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"94"},"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/index.js",[],["193","194"],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/reportWebVitals.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Login.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Dashboard.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Constants.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Quote.js",["195","196"],"import React, { Component } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport UserService from \"../services/user.service\";\n\nconst today = new Date();\nclass UserQuote extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: {},\n            measuresObjId: 1\n        }\n        this.state.item['measures']= [\n            {\n                \"id\": this.state.measuresObjId,\n                \"name\": \"\",\n                \"unit\": \"\",\n                \"qty\": \"\"\n            }\n        ];\n    }\n\n    resetQuote() {\n        this.setState({ \n            item: {},\n            measuresObjId: 1\n         });\n         var obj = this.state.item;\n         obj['measures']= [];\n        this.setState({item:obj});\n    }\n\n    sendQuoteReq() {\n\n        let newMeasuresArray = this.state.item.measures.map(function(item) { \n            delete item.id; \n            return item; \n        });\n\n        var data = {\n            \"title\": this.state.item.title,\n            \"desc\": this.state.item.desc,\n            \"status\": \"NEW\",\n            \"startDate\": this.state.item.startDate,\n            \"endDate\": this.state.item.endDate,\n            \"measures\": newMeasuresArray,\n            \"uploads\": [\n                {\n                    \"fileName\": \"haaaajkdfjkldsajfdsfdslk\",\n                    \"filePath\": \"1234567890qsfdsfdfghdwertg\"\n                }\n            ]\n        };\n\n        UserService.createQuote(data).then(\n            response => {\n                this.props.parentCreateCallBack(response.data);\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n\n    }\n\n    handleFormChange(propertyName, event) {\n        var item = this.state.item;\n        item[propertyName] = event.target.value;\n        this.setState({ item: item });\n    }\n    handleDateChange(propertyName, event) {\n        var item = this.state.item;\n        item[propertyName] = new Date(event);\n        this.setState({ item: item });\n    }\n    handleMeasureChange(id,propertyName,event){\n        var tmpObj  = this.state.item;\n        tmpObj.measures.find(o => o.id == id)[propertyName] = event.target.value;\n        this.setState({item: tmpObj});\n    }\n\n    addMeasuresClick() {\n        let tmpObj = this.state.item;\n        let tmpId = this.state.measuresObjId + 1;\n        this.setState({measuresObjId: tmpId});\n\n        let measuresObj = {\n            \"id\": tmpId,\n            \"name\": \"\",\n            \"unit\": \"\",\n            \"qty\": \"\"\n        };\n        tmpObj.measures = [...tmpObj.measures, measuresObj];\n        this.setState({item: tmpObj});\n    }\n    handleRemoveClick(id,event) {\n        var tmpObj  = this.state.item;\n        tmpObj.measures = this.state.item.measures.filter(o => o.id != id);\n        this.setState({item: tmpObj});   \n    }\n\n\n    render() {\n        return (\n            <div className=\"app flex-row align-items-center\">\n                <div className=\"list-group-header section-header row\">\n                    <div className=\"col\">\n                        <span className=\"mb-1 underline\">Send New </span>\n                        <span className=\"mb-1 blue-color pl-2\">Quote Request</span>\n                    </div>\n                    <div className=\"col text-right\">\n                        <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\" onClick={() => this.resetQuote()} >Reset</button>\n                        <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick={() => this.sendQuoteReq()}>Send</button>\n                    </div>\n                </div>\n                <div className=\"blue-box-div\" id=\"create-quote-form\">\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" className=\"form-control\" id=\"title\"\n                            name=\"title\"\n                            defaultValue={this.state.item.title}\n                            onChange={this.handleFormChange.bind(this, 'title')}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"description\">Description</label>\n                        <textarea className=\"form-control\" id=\"description\" rows=\"3\"\n\n                            defaultValue={this.state.item.desc && this.state.item.desc}\n                            onChange={this.handleFormChange.bind(this, 'desc')}\n\n                        ></textarea>\n                    </div>\n\n                    <div className=\"form-group row\">\n                        <div className=\"col\">\n                            <label >Start Date</label>\n                            <DatePicker\n                                selected={this.state.item.startDate && this.state.item.startDate}\n                                onChange={this.handleDateChange.bind(this, 'startDate')}\n                                className=\"form-control\"\n                                minDate={today}\n                            />\n                        </div>\n                        <div className=\"col\">\n                            <label >End Date</label>\n                            <DatePicker\n                                selected={this.state.item.endDate && this.state.item.endDate}\n                                onChange={this.handleDateChange.bind(this, 'endDate')}\n                                className=\"form-control\"\n                                minDate={this.state.item.startDate}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Measurements</label>\n                        <button className=\"btn add-btn\" onClick={() => this.addMeasuresClick()}></button>\n                       \n                        {this.state.item.measures.length > 0 && \n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <label>Name</label>\n                            </div>\n                            <div className=\"col\">\n                            <label>Unit</label>\n                            </div>\n                            <div className=\"col\">\n                            <label>Quantity</label>\n                            </div>\n                            <div className=\"col\">\n                            <label></label>\n                            </div>\n                        </div>\n                        }\n\n                        {this.state.item.measures && this.state.item.measures.map((item) => {\n                            return(\n                            <div className=\"row pb-2\" key={item.id}>\n                               <div className=\"col\">\n                                <input type=\"text\" className=\"form-control\"\n                                        defaultValue={item.name}\n                                        onChange={this.handleMeasureChange.bind(this, item.id, 'name')}\n                                    />\n                               </div>\n                               <div className=\"col\">\n                                \n                                    <input type=\"text\" className=\"form-control\"\n                                        defaultValue={item.unit}\n                                        onChange={this.handleMeasureChange.bind(this, item.id, 'unit')}\n                                    />\n                               </div>\n                               <div className=\"col\">\n                                \n                                    <input type=\"text\" className=\"form-control\"\n                                        defaultValue={item.qty}\n                                        onChange={this.handleMeasureChange.bind(this, item.id, 'qty')}\n                                    />\n                               </div>\n                               <div className=\"col\">\n                               <button\n                                className=\"btn measure-delete-btn \"\n                                onClick={this.handleRemoveClick.bind(this,item.id)}></button>\n                               </div>\n                            </div>\n                            )\n\n                        })\n\n                        }\n                    </div>\n\n                    <div>\n                        <label>Attachments</label>\n                        <label className=\"btn btn-blue btn-sm pr-4 pl-4 ml-2\">\n                            Browse <input type=\"file\" hidden />\n                        </label>\n                    </div>\n                </div>\n\n\n\n            </div>\n        );\n    }\n}\nexport default UserQuote;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Header.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/QuoteList.js",["197"],"import React, { Component } from 'react';\nimport UserService from \"../services/user.service\";\n\nclass QuoteList extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.getAllQuotes();\n    }\n    \n\n    state = {\n        activeId : 0,\n        searchValue: \"\",\n        listitems: []\n\n    }\n\n    selectQuote(item) {\n        this.props.parentCallback(item);\n        this.setState({\n            activeId:item.id\n          });\n    }\n\n    getAllQuotes() {\n        UserService.getAllQuotes().then(\n            response => {\n                this.setState({\n                    listitems: response.data.rows\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n\n\n    handleChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <div className=\"list-group-header section-header row\">\n                    <div className=\"col-4\">\n                        <span className=\"mb-1 underline\">My Quote</span>\n                        <span className=\"mb-1 blue-color pl-2\">Requests</span>\n                    </div>\n                    <div className=\"col-8\">\n                        <div className=\"has-search\">\n                            <span className=\"fa fa-search form-control-feedback\"></span>\n                            <input type=\"text\" className=\"form-control search-box\" onChange={this.handleChange} placeholder=\"Search quotes...\" />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"list-group\">\n\n                    {this.state.listitems && this.state.listitems.filter(item =>\n                        item.title.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n                            <a className={\n                                (listitem.id === this.state.activeId ? \" active list-group-item list-group-item-action\" : \"list-group-item list-group-item-action\")\n                              }\n                            aria-current=\"true\" key={listitem.id} id={listitem.id} onClick={() => this.selectQuote(listitem)} >\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                    <h5 className=\"mb-1 underline half\">{listitem.title}</h5>\n\n                                </div>\n                                <p className=\"mb-1 ellipses_two\">{listitem.desc}</p>\n                                <div>\n                                    {listitem.tools && listitem.tools.map(tool => (\n                                        <span className=\"badge tool-badge\">{tool}</span>\n                                    )\n                                    )}\n                                </div>\n                                <div className=\"row list-item-detail\">\n                                    <div className=\"col-2 calender-icon\">\n                                        <small>{(new Date(listitem.createdAt)).toLocaleDateString()}</small>\n                                    </div>\n                                    <div className=\"col-5 flag-icon\">\n                                        <small>{listitem.status}</small>\n                                        <span className=\"date-badge badge\">{(new Date(listitem.updatedAt)).toLocaleDateString()}</span>\n                                    </div>\n\n                                    <div className=\"col-3 attachment-icon\">\n                                        <small>{listitem.attachments && listitem.attachments.length}</small>\n                                        <small>Attachments</small>\n                                    </div>\n                                    <div className=\"col-2 rightarrow-icon\">\n                                        <small>View details</small>\n                                    </div>\n                                </div>\n                            </a>\n\n                        ))}\n\n                </div>\n\n            </React.Fragment>\n        );\n    }\n}\nexport default QuoteList;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/QuoteDetail.js",["198","199","200"],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Routes.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Footer.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/AdminDashboard.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageInventory.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditInventory.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageOperations.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditOperations.js",["201","202","203","204","205"],"import React, { Component } from 'react';\n\nimport AdminService from \"../services/admin.service\";\n\nclass EditOperations extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            item: this.props.selectedItem,\n            toolsList: [],\n            selectedTool: {},\n            Required: 0,\n            workerList: [],\n            selectedWorker: {}\n        }\n        this.getAllTools();\n        this.getAllWorkers();\n        this.Required = this.Required.bind(this);\n    }\n\n    getAllTools() {\n        AdminService.getAllInventory().then(\n            response => {\n                this.setState({\n                    toolsList: response.data.rows\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n\n    getAllWorkers() {\n        AdminService.getAllWorkers().then(\n            response => {\n                this.setState({\n                    workerList: response.data.rows\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n\n    Required(event) {\n        this.setState({ Required: event.target.value })\n    }\n    handleChange(propertyName, event) {\n        var item = this.state.item;\n        item[propertyName] = event.target.value;\n        this.setState({ item: item });\n    }\n    handleToolSelection(event) {\n        this.state.selectedTool[\"Inventories\"] = this.state.toolsList.find(o => o.id == event.target.value);\n    }\n    handleWorkerSelection(event) {\n        this.state.selectedWorker[\"Workers\"] = this.state.workerList.find(o => o.id == event.target.value);\n    }\n\n    addTools(event) {\n        \n        this.state.selectedTool.Inventories['required'] = this.state.Required;\n        var selectedOperation = this.state.item;\n        selectedOperation.OperationInventories.push(this.state.selectedTool);\n        this.setState({ item: selectedOperation });\n     \n    }\n    addWorker(event) {\n        var selectedOperation = this.state.item;\n        selectedOperation.OperationWorkers.push(this.state.selectedWorker);\n        this.setState({ item: selectedOperation });\n    }\n\n    saveOperation() {\n        /*console.log(this.state.item);\n        if(this.state.item.id != undefined) {\n            alert(\"editted Successfuly\");\n        } else {\n            alert(\"New item added\");\n        }*/\n        this.props.parentCallback();\n    }\n    resetReq() {\n\n    }\n    handleBreadCrumb() {\n        this.props.parentCallback();\n    }\n\n\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <div className=\"col edit-inventory\">\n                    <div className=\"list-group-header section-header row\">\n                        <div className=\"col-4\">\n\n                            <nav aria-label=\"breadcrumb\">\n                                <ul className=\"breadcrumb\">\n                                    <li className=\"breadcrumb-item\" onClick={this.handleBreadCrumb.bind(this)}>\n                                        <span className=\"mb-1 underline\">Manage</span>\n                                        <span className=\"mb-1 blue-color pl-2\">Operation</span>\n                                    </li>\n                                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                                        <span className=\"mb-1\">{(this.state.item.length !== 0) ? 'Edit' : 'Add'}</span>\n                                        <span className=\"mb-1 blue-color pl-2\">Operation</span>\n                                    </li>\n                                </ul>\n                            </nav>\n\n                        </div>\n                        <div className=\"col-8 text-right\">\n                            <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\" onClick={() => this.resetReq()} >Reset</button>\n                            <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick={() => this.saveOperation()}>Save</button>\n                        </div>\n                    </div>\n\n                    <div className=\"blue-box-div row\">\n                        <div className=\"col white-border-right\">\n                            <div>\n                                <span>Operation Name</span>\n                                <input type=\"text\"\n                                    className=\"form-control\" defaultValue={this.state.item.name}\n                                    onChange={this.handleChange.bind(this, 'name')} />\n                            </div>\n                            <div>\n                                <span>Description</span>\n                                <textarea className=\"form-control\" rows=\"3\"\n                                    defaultValue={this.state.item.desc}\n                                    onChange={this.handleChange.bind(this, 'desc')}></textarea>\n                            </div>\n\n                            <div>\n                            <div className=\"row\">\n                            <div className=\"col\"><span>Tools and Materials</span></div>\n                            <div className=\"col\"><span>Required</span></div>\n                            </div>\n                                \n                                <div className=\"row\">\n                                    <div className=\"col\">\n                                        <select className=\"form-control\" onChange={this.handleToolSelection.bind(this)}>\n                                            <option selected>Select Tools</option>\n                                            {this.state.toolsList.map((toolItem) => (\n                                                <option key={toolItem.id} value={toolItem.id}>{toolItem.itemName}</option>\n                                            ))}\n                                        </select>\n                                    </div>\n                                    <div className=\"col\">\n                                        <input type=\"text\" className=\"form-control col-2 d-inline\" onChange={this.Required}/>\n                                        \n                                        <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4 d-inline\" onClick={this.addTools.bind(this)}>Add</button>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <div className=\"row mt-1 quote-req-header font-weight-bold\">\n                                <div className=\"col-sm\">\n                                    <label>Tool/Material Name</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>Required</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>Availability</label>\n                                </div>\n                            </div>\n                            {this.state.item.OperationInventories && this.state.item.OperationInventories.map(listitem => (\n\n                                <div className=\"row mt-1\" key={listitem.Inventories.id}>\n                                    <div className=\"col-sm\" >\n                                        <label className=\"description-truncate text-truncate\">{listitem.Inventories.itemName}</label>\n                                    </div>\n                                    <div className=\"col-sm\" >\n                                        <label>{listitem.Inventories.required}</label>\n                                    </div>\n                                    <div className=\"col-sm\" >\n                                        <label>{listitem.Inventories.availability}</label>\n                                    </div>\n                                </div>\n                            ))}\n\n                        </div>\n\n\n\n\n\n\n\n                        <div className=\"col\">\n                            \n\n                            <div className=\"row\">\n                                    <div className=\"col\">\n                                    <select className=\"form-control\" onChange={this.handleWorkerSelection.bind(this)}>\n                                            <option selected>Select Worker</option>\n                                            {this.state.workerList.map((item) => (\n                                                <option key={item.id} value={item.id}>{item.name}</option>\n                                            ))}\n                                        </select>\n                                    </div>\n                                    <div className=\"col\"> \n                                        <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4 d-inline\" onClick={this.addWorker.bind(this)}>Add</button>\n                                    </div>\n                                </div>\n\n\n\n\n                            {this.state.item.OperationWorkers && \n                            <div className=\"row mt-1 quote-req-header font-weight-bold\">\n                                <div className=\"col-sm\">\n                                    <label>Worker Profession</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>Required</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>Available</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>Hours</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>Cost</label>\n                                </div>\n                            </div>\n                        }\n\n                            { this.state.item.OperationWorkers && this.state.item.OperationWorkers.map(listitem => (\n\n                                <div className=\"row mt-1\" >\n                                    <div className=\"col-sm\" >\n                                        <label className=\"description-truncate text-truncate\">{listitem.Workers && listitem.Workers.name}</label>\n                                    </div>\n                                    <div className=\"col-sm\" >\n                                        <label>{}</label>\n                                    </div>\n                                    <div className=\"col-sm\" >\n                                        <label>{}</label>\n                                    </div>\n                                    <div className=\"col-sm\" >\n                                        <label>{}</label>\n                                    </div>\n                                    <div className=\"col-sm\" >\n                                        <label></label>\n                                    </div>\n                                </div>\n    \n                                ))}\n\n\n                        </div>\n\n                    </div>\n\n\n\n                </div>\n\n\n            </React.Fragment>\n        );\n    }\n}\nexport default EditOperations;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Utils.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageWorker.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditWorker.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageProjects.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditProject.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageCustomer.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditCustomer.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageInspections.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/auth.service.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/admin.service.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Upload.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/user.service.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ForgotPassword.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditQuote.js",["206","207","208","209","210","211","212"],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageQuote.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Button.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/MyAlert.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Popup.js",["213"],"import React from 'react';\n\nimport { Button } from 'reactstrap';\nimport Modal from \"react-bootstrap/Modal\";\nimport ForgotPassword from \"../common/ForgotPassword\";\nimport ToolsList from \"../common/ToolsList\";\nimport OperationList from \"../common/OperationList\";\nimport ConfigureOperation from \"../common/ConfigureOperation\";\n\nclass Popup extends React.Component {\n\n  toolsListCallback = (list) => {\n    this.props.parentCloseCallback(list);\n  }\n\n  renderPopupBody() {  \n    switch(this.props.popupConfig.type) {\n      case 'forgotPassword':\n        return <ForgotPassword popupClose={this.props.parentCloseCallback}></ForgotPassword>;\n      case 'toolsList':\n        return <ConfigureOperation showTools={true} popupClose={this.toolsListCallback}></ConfigureOperation>;\n      case 'workerList':\n        return <ConfigureOperation showWorkers={true} popupClose={this.toolsListCallback}></ConfigureOperation>;\n      case 'configureOperation':\n        return <ConfigureOperation showTools={true} showWorkers={true} popupClose={this.toolsListCallback}></ConfigureOperation>;\n      case 'operationList':\n        return <OperationList popupClose={this.toolsListCallback}></OperationList>;\n      default:\n        return this.props.popupConfig.body;\n    }\n  };\n\n  render() {\n    const popupConfigType = this.props.popupConfig.type;\n    let button;\n\n    if (popupConfigType === \"confirmation\") {\n      button = <Button color=\"success\" onClick={this.props.parentConfirmCallback}>Confirm Delete</Button>;\n    } \n    return (\n      <Modal show={this.props.openFlag} onHide={this.props.parentCloseCallback}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.popupConfig.header}</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n        { this.renderPopupBody() }\n        </Modal.Body>\n       \n        <Modal.Footer>\n          {button}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\nexport default Popup;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Sidebar.js",["214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231"],"import React, { Component } from 'react';\n\nimport {usersTag} from '../common/Constants';\n\nclass Sidebar extends Component {\n\n    render() {\n        var currentUserId = JSON.parse(localStorage.getItem('user')).userId;\n        \n        return (\n            <React.Fragment>\n                {currentUserId !== usersTag.WORKER_TAG ? \n                ( <div className=\"sidebar-div\">\n                    <ul className=\"nav flex-column\">\n                        <li className=\"nav-item nav-quote-req\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Quote Requests\">\n                            <a className=\"nav-link active\" data-toggle=\"tab\" onClick={ (e) => this.props.onClick(e) } data-id=\"1\"></a>\n                        </li>\n                        <li className=\"nav-item nav-workers\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Workers\">\n                            <a className=\"nav-link\" data-toggle=\"tab\" onClick={ (e) => this.props.onClick(e) } data-id=\"2\"></a>\n                        </li>\n                        <li className=\"nav-item nav-mail\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Customers\">\n                            <a className=\"nav-link\" data-toggle=\"tab\" onClick={ (e) => this.props.onClick(e) } data-id=\"3\"></a>\n                        </li>\n                        <li className=\"nav-item nav-inventory\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Inventory\">\n                            <a className=\"nav-link\" data-toggle=\"tab\" onClick={ (e) => this.props.onClick(e) } data-id=\"5\"></a>\n                        </li>\n                        <li className=\"nav-item nav-operations\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Operations\">\n                            <a className=\"nav-link\" href=\"#operations-page\" data-toggle=\"tab\" onClick={ (e) => this.props.onClick(e) } data-id=\"6\"></a>\n                        </li>\n                        <li className=\"nav-item nav-projects\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Projects\">\n                            <a className=\"nav-link\" data-toggle=\"tab\" onClick={ (e) => this.props.onClick(e) } data-id=\"7\"></a>\n                        </li>\n                        <li className=\"nav-item nav-test\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Inspections\">\n                            <a className=\"nav-link\" data-toggle=\"tab\" onClick={ (e) => this.props.onClick(e) } data-id=\"4\"></a>\n                        </li>    \n                    </ul>\n                </div> )\n                : \n                ( <div className=\"sidebar-div\">\n                    <ul className=\"nav flex-column\">\n                        <li className=\"nav-item nav-operations\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Operations\">\n                            <a className=\"nav-link\" href=\"#operations-page\" data-toggle=\"tab\" onClick={ (e) => this.props.onClick(e) } data-id=\"1\"></a>\n                        </li>\n                        <li className=\"nav-item nav-projects\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Projects\">\n                            <a className=\"nav-link\" data-toggle=\"tab\" onClick={ (e) => this.props.onClick(e) } data-id=\"2\"></a>\n                        </li>\n                        <li className=\"nav-item nav-test\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Inspections\">\n                            <a className=\"nav-link\" data-toggle=\"tab\" onClick={ (e) => this.props.onClick(e) } data-id=\"3\"></a>\n                        </li>    \n                    </ul>\n                </div> )\n                }\n            </React.Fragment>\n        );\n    }\n}\nexport default Sidebar;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerDashboard.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerOperations.js",["232"],"import React, { Component } from 'react';\n\nimport jsonData from \"../../data/operationsData.json\";\nimport AdminService from \"../services/admin.service\";\n\nclass WorkerOperations extends Component {\n    state = {\n        searchValue: \"\",\n        listitems: jsonData.operationsList,\n        selectedItem: [],\n        editOperationPage: false\n    }\n    constructor(props) {\n        super(props);\n        //this.getAllOperationList();\n    }\n    getAllOperationList() {\n        AdminService.getAllOperations().then(\n            response => {\n                this.setState({\n                    listitems: response.data.operations\n                });\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n    }\n    handleSearchChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n    editOperations() {\n        this.setState({\n            editOperationPage: true\n        });\n    }\n    deleteOperations() {\n        var tempList = this.state.listitems.filter(item => item.id !== this.state.selectedItem.id);\n        this.setState({\n            listitems: tempList\n        });\n    }\n    addOperations() {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editOperationPage: true\n        });\n    }\n    onOperationSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    parentCallback = () => {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editOperationPage:false\n          });\n    }\n    renderOperationsList() {\n        return(\n            <div className=\"col admin-list-page\" id=\"operations-page\">\n                    <div className=\"list-group-header section-header row\">\n\n                        <div className=\"col-4\">\n                            <span className=\"mb-1 underline\">Manage</span>\n                            <span className=\"mb-1 blue-color pl-2\">Operations</span>\n                        </div>\n\n                        <div className=\"col-8 text-right\">\n                            <div className=\"has-search\">\n                                <span className=\"fa fa-search form-control-feedback\"></span>\n                                <input type=\"text\" className=\"form-control search-box\" placeholder=\"Search quote requests...\" onChange={this.handleSearchChange.bind(this)} />\n                            </div>\n                            <button className=\"btn delete-btn\" onClick={() => this.deleteOperations()}></button>\n                            <button className=\"btn edit-btn\" onClick={() => this.editOperations()}></button>\n                            <button className=\"btn add-btn\" onClick={() => this.addOperations()}></button>\n                        </div>\n                    </div>\n                    <div className=\"quote-req-list\">\n                        <div className=\"row mt-1 quote-req-header\">\n                            <div className=\"col-sm\">\n                                <label>Operation Name</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Description</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Start Date</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>End Date</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Hours Commited</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Hours Left</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Status</label>\n                            </div>\n                        </div>\n                        <div className=\"quote-req-table\">\n\n                           {this.state.listitems.filter(item =>\n                                item.o_name.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n                                    <div className=\"row mt-1\" key={listitem.id}>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                                <input type=\"radio\" className=\"toggle\"\n                                                    name=\"operationItem\" value={listitem.id}\n                                                    onChange={() => this.onOperationSelected(listitem)} />\n                                                {listitem.o_name}\n                                            </label>\n                                            \n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"description-truncate text-truncate\">{listitem.o_desc}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.createdAt}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.updatedAt}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.hoursCommited}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.hoursLeft}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.status}</label>\n                                        </div>\n                                    </div>\n                                ))}\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderOperationsList()}\n            </React.Fragment>\n        );\n    }\n}\nexport default WorkerOperations;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerProjects.js",["233"],"import React, { Component } from 'react';\nimport {statusColorClass} from '../common/Utils.js';\n\nimport AdminService from \"../services/admin.service\";\n\nimport jsonData from \"../../data/projectData.json\";\n\nclass WorkerProjects extends Component {\n    state = {\n        searchValue: \"\",\n        listitems: jsonData.projects,\n        selectedItem: [],\n        editProjectPage: false\n    }\n    constructor(props) {\n        super(props);\n        //this.getAllProjectList();\n    }\n    getAllProjectList() {\n        AdminService.getAllProjects().then(\n            response => {\n                this.setState({\n                    listitems: response.data.projects\n                });\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n          \n    }\n    handleSearchChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n    editProjects() {\n        this.setState({\n            editProjectPage: true\n        });\n    }\n    deleteProjects() {\n        var tempList = this.state.listitems.filter(item => item.id !== this.state.selectedItem.id);\n        this.setState({\n            listitems: tempList\n        });\n    }\n    addProjects() {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editProjectPage: true\n        });\n    }\n    onProjectSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    parentCallback = () => {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editProjectPage:false\n          });\n    }\n    renderProjectList() {\n        return(\n            <div className=\"col admin-list-page\" id=\"projects-page\">\n                    <div className=\"list-group-header section-header row\">\n\n                        <div className=\"col-4\">\n                            <span className=\"mb-1 underline\">Manage</span>\n                            <span className=\"mb-1 blue-color pl-2\">Projects</span>\n                        </div>\n\n                        <div className=\"col-8 text-right\">\n                            <div className=\"has-search\">\n                                <span className=\"fa fa-search form-control-feedback\"></span>\n                                <input type=\"text\" className=\"form-control search-box\" placeholder=\"Search projects...\" onChange={this.handleSearchChange.bind(this)} />\n                            </div>\n                            <button className=\"btn delete-btn\" onClick={() => this.deleteProjects()}></button>\n                            <button className=\"btn edit-btn\" onClick={() => this.editProjects()}></button>\n                            <button className=\"btn add-btn\" onClick={() => this.addProjects()}></button>\n                        </div>\n                    </div>\n                    <div className=\"quote-req-list\">\n                        <div className=\"row mt-1 quote-req-header\">\n                            <div className=\"col-sm\">\n                                <label>Project Name</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Description</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Hours Commited</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Hours Left</label>\n                            </div>\n\n                            <div className=\"col-sm\">\n                                <label>Start Date</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>End Date</label>\n                            </div>\n                            \n                            \n                            <div className=\"col-sm\">\n                                <label>Status</label>\n                            </div>\n                        </div>\n                        <div className=\"quote-req-table\">\n                        \n                            {this.state.listitems.filter(item =>\n                                item.p_name.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n                                    <div className=\"row mt-1\" key={listitem.id}>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                                <input type=\"radio\" className=\"toggle\"\n                                                    name=\"projectItem\" value={listitem.id}\n                                                    onChange={() => this.onProjectSelected(listitem)} />\n                                                {listitem.p_name}\n                                            </label>\n                                            \n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"description-truncate text-truncate\">{listitem.p_desc}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.hours_commited}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.hours_left}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{(new Date(listitem.start_date)).toLocaleDateString()}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{(new Date(listitem.end_date)).toLocaleDateString()}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className = {\"badge \" + statusColorClass(listitem.p_status)} >{listitem.p_status}</label>\n                                        </div>\n                                    </div>\n                                ))}\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderProjectList()}\n            </React.Fragment>\n        );\n    }\n}\nexport default WorkerProjects;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerTimesheet.js",["234"],"\nimport React, { Component } from 'react';\n\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject } from '@syncfusion/ej2-react-schedule';\n\nclass WorkerSchedule extends Component {\n    state = {\n       \n    }\n    constructor(props) {\n        super(props);\n        \n    }\n    render() {\n        return (\n            <div className=\"col admin-list-page\" id=\"operations-page\">\n            <ScheduleComponent>\n    <Inject services={[Day, Week, WorkWeek, Month, Agenda]}/>\n</ScheduleComponent>\n</div>\n        );\n    }\n}\nexport default WorkerSchedule;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ToolsList.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Checkbox.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/OperationList.js",["235"],"import React, { Component } from 'react';\n\nimport AdminService from \"../services/admin.service\";\n\nimport Checkbox from \"../components/Checkbox\";\n\nclass OperationList extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            listitems: [],\n            searchValue: \"\"\n        }\n        this.getAllOperationList();\n    }\n\n    getAllOperationList() {\n        AdminService.getAllOperations().then(\n            response => {\n                console.log(response);\n                debugger;\n                this.setState({\n                    listitems: response.data.rows\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n    onTagOperationSelectedSave() {\n        this.props.popupClose(this.state.selectedItem);\n    }\n\n    onOperationSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"admin-list-page\">\n                    <div className=\"quote-req-list\">\n                        <div className=\"row mt-1 quote-req-header\">\n                            <div className=\"col-sm\">\n                                <label>Operation Name</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Description</label>\n                            </div>\n\n                        </div>\n\n                        <div className=\"quote-req-table\">\n                            {this.state.listitems && this.state.listitems.filter(item =>\n                                item.name.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n                                    <div className=\"row mt-1\" key={listitem.id}>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                                <input type=\"radio\" className=\"toggle\"\n                                                    name=\"operationItem\" value={listitem.id}\n                                                    onChange={() => this.onOperationSelected(listitem)} />\n                                                {listitem.name}\n                                            </label>\n\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"description-truncate text-truncate\">{listitem.desc}</label>\n                                        </div>\n                                    </div>\n                                ))}\n                        </div>\n                        <button onClick={() => this.onTagOperationSelectedSave()} className=\"btn btn-success btn-sm\" >Save</button>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n\n    }\n}\nexport default OperationList;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ConfigureOperation.js",["236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255"],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/TableRow.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/TableHeader.js",["256"],"import React from \"react\";\n\nconst TableHeader = ({ headerObj, onCheckboxChange }) => {\n\n  return (<tr className=\"green-text-color2\" key=\"tableHeade\">\n    {headerObj && headerObj.map((item, i) => {\n      if (item == \"inputCheckbox\") {\n        return (\n          <th key=\"0\" >\n            <input type=\"checkbox\" value=\"\" name=\"selectAllTools\" />\n          </th>\n        )\n      } else {\n        return (\n          <th key={item}>{item}</th>\n        )\n      }\n    }\n\n    )}\n\n\n  </tr>);\n}\n\nexport default TableHeader;",{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":80,"column":40,"nodeType":"263","messageId":"264","endLine":80,"endColumn":42},{"ruleId":"261","severity":1,"message":"265","line":100,"column":69,"nodeType":"263","messageId":"264","endLine":100,"endColumn":71},{"ruleId":"266","severity":1,"message":"267","line":68,"column":29,"nodeType":"268","endLine":71,"endColumn":128},{"ruleId":"261","severity":1,"message":"262","line":39,"column":40,"nodeType":"263","messageId":"264","endLine":39,"endColumn":42},{"ruleId":"261","severity":1,"message":"265","line":70,"column":77,"nodeType":"263","messageId":"264","endLine":70,"endColumn":79},{"ruleId":"261","severity":1,"message":"262","line":296,"column":63,"nodeType":"263","messageId":"264","endLine":296,"endColumn":65},{"ruleId":"269","severity":1,"message":"270","line":56,"column":9,"nodeType":"271","endLine":56,"endColumn":32},{"ruleId":"261","severity":1,"message":"262","line":56,"column":86,"nodeType":"263","messageId":"264","endLine":56,"endColumn":88},{"ruleId":"269","severity":1,"message":"270","line":59,"column":9,"nodeType":"271","endLine":59,"endColumn":34},{"ruleId":"261","severity":1,"message":"262","line":59,"column":85,"nodeType":"263","messageId":"264","endLine":59,"endColumn":87},{"ruleId":"269","severity":1,"message":"270","line":64,"column":9,"nodeType":"271","endLine":64,"endColumn":44},{"ruleId":"272","severity":1,"message":"273","line":2,"column":10,"nodeType":"274","messageId":"275","endLine":2,"endColumn":16},{"ruleId":"272","severity":1,"message":"276","line":12,"column":8,"nodeType":"274","messageId":"275","endLine":12,"endColumn":21},{"ruleId":"277","severity":1,"message":"278","line":91,"column":63,"nodeType":"279","messageId":"280","endLine":91,"endColumn":65},{"ruleId":"277","severity":1,"message":"278","line":100,"column":66,"nodeType":"279","messageId":"280","endLine":100,"endColumn":68},{"ruleId":"261","severity":1,"message":"262","line":186,"column":60,"nodeType":"263","messageId":"264","endLine":186,"endColumn":62},{"ruleId":"281","severity":1,"message":"282","line":214,"column":11,"nodeType":"274","messageId":"283","endLine":214,"endColumn":14},{"ruleId":"261","severity":1,"message":"262","line":214,"column":60,"nodeType":"263","messageId":"264","endLine":214,"endColumn":62},{"ruleId":"272","severity":1,"message":"284","line":6,"column":8,"nodeType":"274","messageId":"275","endLine":6,"endColumn":17},{"ruleId":"285","severity":1,"message":"286","line":16,"column":29,"nodeType":"268","endLine":16,"endColumn":131},{"ruleId":"266","severity":1,"message":"267","line":16,"column":29,"nodeType":"268","endLine":16,"endColumn":131},{"ruleId":"285","severity":1,"message":"286","line":19,"column":29,"nodeType":"268","endLine":19,"endColumn":124},{"ruleId":"266","severity":1,"message":"267","line":19,"column":29,"nodeType":"268","endLine":19,"endColumn":124},{"ruleId":"285","severity":1,"message":"286","line":22,"column":29,"nodeType":"268","endLine":22,"endColumn":124},{"ruleId":"266","severity":1,"message":"267","line":22,"column":29,"nodeType":"268","endLine":22,"endColumn":124},{"ruleId":"285","severity":1,"message":"286","line":25,"column":29,"nodeType":"268","endLine":25,"endColumn":124},{"ruleId":"266","severity":1,"message":"267","line":25,"column":29,"nodeType":"268","endLine":25,"endColumn":124},{"ruleId":"285","severity":1,"message":"286","line":28,"column":29,"nodeType":"268","endLine":28,"endColumn":148},{"ruleId":"285","severity":1,"message":"286","line":31,"column":29,"nodeType":"268","endLine":31,"endColumn":124},{"ruleId":"266","severity":1,"message":"267","line":31,"column":29,"nodeType":"268","endLine":31,"endColumn":124},{"ruleId":"285","severity":1,"message":"286","line":34,"column":29,"nodeType":"268","endLine":34,"endColumn":124},{"ruleId":"266","severity":1,"message":"267","line":34,"column":29,"nodeType":"268","endLine":34,"endColumn":124},{"ruleId":"285","severity":1,"message":"286","line":42,"column":29,"nodeType":"268","endLine":42,"endColumn":148},{"ruleId":"285","severity":1,"message":"286","line":45,"column":29,"nodeType":"268","endLine":45,"endColumn":124},{"ruleId":"266","severity":1,"message":"267","line":45,"column":29,"nodeType":"268","endLine":45,"endColumn":124},{"ruleId":"285","severity":1,"message":"286","line":48,"column":29,"nodeType":"268","endLine":48,"endColumn":124},{"ruleId":"266","severity":1,"message":"267","line":48,"column":29,"nodeType":"268","endLine":48,"endColumn":124},{"ruleId":"287","severity":1,"message":"288","line":13,"column":5,"nodeType":"289","messageId":"290","endLine":16,"endColumn":6},{"ruleId":"287","severity":1,"message":"288","line":15,"column":5,"nodeType":"289","messageId":"290","endLine":18,"endColumn":6},{"ruleId":"287","severity":1,"message":"288","line":10,"column":5,"nodeType":"289","messageId":"290","endLine":13,"endColumn":6},{"ruleId":"272","severity":1,"message":"291","line":5,"column":8,"nodeType":"274","messageId":"275","endLine":5,"endColumn":16},{"ruleId":"272","severity":1,"message":"291","line":4,"column":8,"nodeType":"274","messageId":"275","endLine":4,"endColumn":16},{"ruleId":"261","severity":1,"message":"262","line":77,"column":78,"nodeType":"263","messageId":"264","endLine":77,"endColumn":80},{"ruleId":"261","severity":1,"message":"262","line":78,"column":66,"nodeType":"263","messageId":"264","endLine":78,"endColumn":68},{"ruleId":"261","severity":1,"message":"262","line":80,"column":48,"nodeType":"263","messageId":"264","endLine":80,"endColumn":50},{"ruleId":"269","severity":1,"message":"270","line":97,"column":17,"nodeType":"271","endLine":97,"endColumn":27},{"ruleId":"281","severity":1,"message":"292","line":98,"column":21,"nodeType":"274","messageId":"283","endLine":98,"endColumn":28},{"ruleId":"261","severity":1,"message":"262","line":109,"column":81,"nodeType":"263","messageId":"264","endLine":109,"endColumn":83},{"ruleId":"261","severity":1,"message":"262","line":110,"column":75,"nodeType":"263","messageId":"264","endLine":110,"endColumn":77},{"ruleId":"261","severity":1,"message":"262","line":112,"column":50,"nodeType":"263","messageId":"264","endLine":112,"endColumn":52},{"ruleId":"261","severity":1,"message":"265","line":129,"column":83,"nodeType":"263","messageId":"264","endLine":129,"endColumn":85},{"ruleId":"269","severity":1,"message":"270","line":130,"column":17,"nodeType":"271","endLine":130,"endColumn":27},{"ruleId":"281","severity":1,"message":"292","line":131,"column":21,"nodeType":"274","messageId":"283","endLine":131,"endColumn":28},{"ruleId":"261","severity":1,"message":"262","line":143,"column":31,"nodeType":"263","messageId":"264","endLine":143,"endColumn":33},{"ruleId":"261","severity":1,"message":"262","line":144,"column":32,"nodeType":"263","messageId":"264","endLine":144,"endColumn":34},{"ruleId":"261","severity":1,"message":"262","line":146,"column":44,"nodeType":"263","messageId":"264","endLine":146,"endColumn":46},{"ruleId":"261","severity":1,"message":"262","line":147,"column":45,"nodeType":"263","messageId":"264","endLine":147,"endColumn":47},{"ruleId":"261","severity":1,"message":"262","line":159,"column":31,"nodeType":"263","messageId":"264","endLine":159,"endColumn":33},{"ruleId":"261","severity":1,"message":"262","line":160,"column":32,"nodeType":"263","messageId":"264","endLine":160,"endColumn":34},{"ruleId":"261","severity":1,"message":"262","line":162,"column":40,"nodeType":"263","messageId":"264","endLine":162,"endColumn":42},{"ruleId":"261","severity":1,"message":"262","line":163,"column":41,"nodeType":"263","messageId":"264","endLine":163,"endColumn":43},{"ruleId":"261","severity":1,"message":"262","line":7,"column":16,"nodeType":"263","messageId":"264","endLine":7,"endColumn":18},"no-native-reassign",["293"],"no-negated-in-lhs",["294"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'operationJson' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-redeclare","'obj' is already defined.","redeclared","'ToolsList' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Checkbox' is defined but never used.","'tmpCost' is already defined.","no-global-assign","no-unsafe-negation"]